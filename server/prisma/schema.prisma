datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  resetToken String?    @unique
  resetTokenExpiry DateTime?
  summaries Summary[]
}

model Summary {
  id          String    @id @default(uuid())
  videoId     String
  summaryText String    @db.Text
  userId      String?
  user        User?     @relation(fields: [userId], references: [id])
  anonymousId String?
  createdAt   DateTime  @default(now())
  expiresAt   DateTime?
  isCached    Boolean   @default(false)

  @@index([videoId])
  @@index([userId])
  @@index([anonymousId])
}

model TestVideo {
  id          String      @id @default(uuid())
  videoId     String      @unique
  status      String      @default("processing") // processing, completed, failed
  author      TestAuthor  @relation(fields: [authorId], references: [id])
  authorId    String
  description String
  hashtags    String[]
  thumbnail   String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  analysis    TestAnalysis?
}

model TestAuthor {
  id      String      @id @default(uuid())
  name    String
  url     String      @unique
  videos  TestVideo[]
}

model TestAnalysis {
  id          String    @id @default(uuid())
  videoId     String    @unique
  video       TestVideo @relation(fields: [videoId], references: [videoId])
  summary     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}