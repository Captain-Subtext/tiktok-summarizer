generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String
  createdAt        DateTime  @default(now())
  resetToken       String?   @unique
  resetTokenExpiry DateTime?
  summaries        Summary[]
}

model Summary {
  id          String    @id @default(uuid())
  videoId     String
  summaryText String
  userId      String?
  anonymousId String?
  createdAt   DateTime  @default(now())
  expiresAt   DateTime?
  isCached    Boolean   @default(false)
  user        User?     @relation(fields: [userId], references: [id])

  @@index([videoId])
  @@index([userId])
  @@index([anonymousId])
}

model TestVideo {
  videoId       String           @unique
  description   String
  hashtags      String[]
  thumbnail     String?
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  archivedAt    DateTime?
  completedAt   DateTime?
  currentStage  ProcessingStage?
  deleteAfter   DateTime?
  failureReason String?
  isArchived    Boolean          @default(false)
  lastActivity  DateTime?        @updatedAt
  retryCount    Int              @default(0)
  startedAt     DateTime?
  id            Int              @id @default(autoincrement())
  authorId      Int?
  status        String           @default("processing")
  stalledAt     DateTime?
  analysis      TestAnalysis?
  author        TestAuthor?      @relation(fields: [authorId], references: [id])
}

model TestAnalysis {
  id      String    @id @default(uuid())
  videoId String    @unique
  summary String
  video   TestVideo @relation(fields: [videoId], references: [videoId])
}

model TestAuthor {
  name   String
  url    String      @unique
  id     Int         @id @default(autoincrement())
  videos TestVideo[]
}

enum VideoStatus {
  QUEUED
  PROCESSING
  STALLED
  FAILED
  COMPLETED
  ARCHIVED
  DELETED
}

enum ProcessingStage {
  DOWNLOAD
  EXTRACT
  TRANSCRIBE
  ANALYZE
  SUMMARIZE
}
